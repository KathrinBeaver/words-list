ТЕОРЕТИЧЕСКИЕ ОСНОВЫ РЕЛЯЦИОННОЙ МОДЕЛИ ДАННЫХ (РДМ). 
Модель данных можно определить как средство описания логического представления физических данных. Модель данных задает некоторый базовый набор понятий и свойств, которым должны удовлетворять все базы данных этой модели.
Модель данных состоит из трех основных компонент:
1. Структура данных.
2. Допустимые операции, выполняемые на структуре данных и составляющие основу языка данных рассматриваемой модели.
3. Ограничения для контроля целостности.
Понятие реляционной моделью данных (от английского relation - отношение) связано с разработками Е. Кодда. Эти модели характеризуются простотой структуры данных, удобным для пользователя табличным представлением и возможностью использования формального аппарата реляционной алгебры и реляционного исчисления для обработки данных.
Согласно Дейту, реляционная модель состоит из трех частей: 
•	Структурная часть описывает, какие объекты рассматриваются реляционной моделью. Постулируется, что единственной структурой данных, используемой в реляционной модели, являются нормализованные n-арные отношения. 
•	Целостная часть описывает ограничения специального вида, которые должны выполняться для любых отношений в любых реляционных базах данных. Это целостность сущностей и целостность внешних ключей. 
•	Манипуляционная часть описывает два эквивалентных способа манипулирования реляционными данными - реляционную алгебру и реляционное исчисление. 
Пусть D1, D2, ..., Dn - произвольные (не обязательно различные) конечные множества. Декартовым произведением этих множеств D1xD2...xDn называется множество элементов вида d = <d1, d2, ..., dn>, где di   Di, i = 1, 2, ... , n. Элементы декартова произведения называются кортежами. Число компонент кортежа n называется степенью или арностью кортежа.
Декартово произведение позволяет получить все возможные комбинации элементов исходных множеств. Отношением R, определенным на множествах D1, D2, ..., Dn, называется подмножество декартова произведения D1xD2x...xDn. Множества D1, D2, ..., Dn называются доменами отношения R, т.е. домен – это область допустимых значений атрибутов.  Степень или арность кортежей (в рассмтриваемом случае n) определяет степень или арность отношения. Отношения арности 1 - унарные, арности 2 - бинарные, арности 3 - тернарные, арности k - k-арные.
Отношения удобно представлять в форме таблиц, где каждая строка есть кортеж, а каждый столбец - атрибут, определенный на некотором домене. Реляционная модель ориентирована на организацию данных в виде двумерных таблиц.  Наименьшей единицей данных в реляционной модели является отдельное значение данных. Такие значения рассматриваются как атомарные, т.е. более не детализируемые в рамках данной модели. Реляционная таблица представляет собой двумерный массив и обладает следующими свойствами:
•	каждый элемент таблицы — один элемент данных; 
•	Все столбцы в таблице однородные, то есть, все элементы в столбце имеют одинаковый тип (числовой, символьный или другой) и длину; 
•	Каждый столбец имеет уникальное имя; 
•	Одинаковые строки в таблице отсутствуют; 
•	Порядок следования строк и столбцов может быть произвольным. 
Ключ – один или множество атрибутов, значения которых однозначно идентифицируют объект.
Для задания связей между типами объектов и атрибутами используют отображения и ассоциации. Отображения обычно задают двусторонние или n-арные связи (1:1, 1:М, М:М). Ассоциации используют для отображения связей между атрибутами в случае, когда не требуется сведений об обратной связи, односторонние связи между объектами.
Теоретическую основу реляционной модели данных составляют теория множеств, реляционная алгебра и реляционное исчисление.
Реляционная алгебра — формальная система манипулирования отношениями в реляционной модели данных, базируется на классической теории множеств и в ее основе лежит совокупность операций над отношениями.
Реляционное исчисление — прикладная ветвь формального механизма исчисления предикатов первого порядка. В основе исчисления лежит понятие переменной с определенной для нее областью допустимых значений и понятие правильно построенной формулы, опирающейся на переменные, предикаты и кванторы. Наряду с реляционной алгеброй является способом получения результирующего отношения в реляционной модели данных. В зависимости от того, что является областью определения переменной, различают: исчисление кортежей и исчисление доменов.
Реляционная алгебра и реляционное исчисление отличаются только внешне, на самом деле они эквивалентны. Однако языки исчисления – это не процедурные языки, поскольку их средствами можно выразить все, что необходимо и необязательно указывать, как это получить. Выражение в исчислении описывает лишь свойства желаемого результата, фактически не указывая, как его получить. Выражения реляционной алгебры, напротив, определяют конкретный порядок выполнения операций.
Реляционная алгебра содержит две группы операций.
Первая группа операций. Поскольку отношения являются множествами, то к ним применимы следующие обычные теоретико-множественные операции: • объединение отношений; • пересечение отношений; • разность (вычитание) отношений;
• декартово произведение отношений.
Вторая группа операций содержит следующие специальные реляционные операции: • селекция (ограничение) отношения; • проекция отношений; • соединение отношений; • деление отношений.
	
 
2.ФУНКЦИОНАЛЬНЫЕ ЗАВИСИМОСТИ И НОРМАЛИЗАЦИЯ ОТНОШЕНИЙ.
	Функциональные зависимости:
Функциональная зависимость — В отношении R атрибут Y функционально зависит от атрибута X тогда и только тогда, когда в любой момент времени каждому значению Х соответствует в точности одно значение Y. 
R.X > R.Y
Иными словами: Поле В таблицы функционально зависит от поля А той же таблицы в том и только в том случае, когда в любой заданный момент времени для каждого из различных значений поля А обязательно существует только одно из различных значений поля В. Отметим, что здесь допускается, что поля А и В могут быть составными.
Полная функциональная зависимость. Функциональная зависимость R.X > R.Y называется полной, если атрибут Y зависит от всей группы атрибутов Х и не зависит функционально от любой ее части (подмножества).
Транзитивная функциональная зависимость. Функциональная зависимость R.X > R.Y называется транзитивной, если существует такой атрибут Z, что имеются функциональные зависимости:
R.X > R.Z и R.Z > R.Y
	ФЗ - она возникает, когда по значениям одних данных в предметной области можно определить значения других данных. Например, зная табельный номер сотрудника, можно определить его фамилию, по номеру отдела можно определить телефона.
 
При проектировании БД не используют универсальные отношения из-за наличия проблем:
•	Большой избыточности;
•	Модификации данных;
•	Аномалии удаления данных;
•	Аномалии включения.
Для решения проблемы аномалий разработан аппарат нормализации отношений Бойса-Кодда. 
Нормализация - это пошаговый обратимый процесс замены данной схемы (или совокупности отношений) базы данных другой схемой, в которой отношения имеют более простую и регулярную структуру.
Основные свойства нормальных форм: 
•	каждая следующая нормальная форма в некотором смысле лучше предыдущей; 
•	при переходе к следующей нормальной форме свойства предыдущих нормальных свойств сохраняются.
Всего в реляционной теории насчитывается 6 НФ:
•	1-я НФ (обычно обозначается также 1НФ). 
Отношение находит в 1НФ, если значения всех его атрибутов атомарны. Для первичной обработки и ввода в машину.
•	2НФ. 
Отношение находится в 2НФ, если оно находится в 1НФ и каждый неключевой атрибут функционально полно зависит от составного ключа.
•	3НФ. 
Отношение находится в 3НФ, если оно находится в 2НФ и каждый неключевой атрибут нетранзитивно зависит от ключа.
•	НФ Бойса-Кодда (НФБК). 
Таблица находится в НФБК, если любая функциональная зависимость между полями сводится к полной функциональной зависимости от возможного ключа.
•	4НФ.
4НФ является частным случаем 5НФ, когда полная декомпозиция должна быть соединением ровно двух проекций. 
•	5НФ.
Таблица находится в 5НФ тогда и только тогда, когда в каждой ее полной декомпозиции все проекции содержат возможный ключ. Таблица, не имеющая ни одной полной декомпозиции, также находится в 5НФ. 

На практике, как правило, ограничиваются 3НФ, ее оказывается вполне достаточно для создания надежной схемы БД. 
Коддом первоначально выделено три нормальных формы – 1НФ, 2НФ и 3НФ и описан механизм, позволяющий любое отношение преобразовать к 3НФ:
	Шаг 1 (Приведение к 1НФ). На первом шаге задается одно или несколько отношений, отображающих понятия предметной области. По модели предметной области (не по внешнему виду полученных отношений!) выписываются обнаруженные функциональные зависимости. Все отношения автоматически находятся в 1НФ. 
	Шаг 2 (Приведение к 2НФ). Если в некоторых отношениях обнаружена зависимость атрибутов от части сложного ключа, то проводим декомпозицию этих отношений на несколько отношений следующим образом: те атрибуты, которые зависят от части сложного ключа выносятся в отдельное отношение вместе с этой частью ключа. В исходном отношении остаются все ключевые атрибуты: 
	Шаг 3 (Приведение к 3НФ). Если в некоторых отношениях обнаружена зависимость некоторых неключевых атрибутов других неключевых атрибутов, то проводим декомпозицию этих отношений следующим образом: те неключевые атрибуты, которые зависят других неключевых атрибутов выносятся в отдельное отношение. В новом отношении ключом становится детерминант функциональной зависимости: 


