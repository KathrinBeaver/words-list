I.	ИНФОРМАЦИОННЫЕ СИСТЕМЫ И  БАЗЫ 
ДАННЫХ
1.1. Основные понятия
В основе решения многих задач лежит обработка информации. Для облегчения обработки информации создаются информационные системы (ИС). Автоматизированными называют ИС, в которых при-меняют технические средства, в частности ЭВМ. Большинство существующих ИС являются автоматизированными, поэтому для краткости будем называть их  ИС.	
В широком понимании под определение ИС подпадает любая система обработки информации. По области применения ИС можно разделить на системы, используемые в производстве, образовании, здравоохранении, науке, военном деле, социальной сфере, торговле и других отраслях. По целевой функции ИС можно условно разделить на следующие основные категории: управляющие, информационно-справочные, поддержки при¬нятия решений.
Заметим, что иногда используется более узкая трактовка по-нятия ИС как совокупности аппаратно-программных средств, за-действован¬ных для решения некоторой прикладной задачи. В орга-низации, на¬пример, могут существовать информационные системы, на которых соответственно возложены следующие задачи: учет кадров и матери¬ально-технических средств, расчет с поставщиками и заказчиками, бух¬галтерский учет и т. п.
Банк данных является разновидностью ИС, в которой реали-зованы фун¬кции централизованного хранения и накопления обраба-тываемой инфор¬мации, организованной в одну или несколько баз данных.
Банк данных (БнД) в общем случае состоит из следующих компонентов: базы (нескольких баз) данных, системы управления базами данных, слова¬ря данных, администратора, вычислительной системы и обслуживающего персонала. Коротко рассмотрим на-званные компоненты и некоторые свя¬занные с ними важные понятия.
База данных (БД) представляет собой совокупность специаль-ным обра¬зом организованных данных, хранимых в памяти вычисли-тельной систе¬мы и отображающих состояние объектов и их взаимо-связей в рассматрива¬емой предметной области.
Логическую структуру хранимых в базе данных называют мо-делью представления данных. К основным моделям представления данных (моделям данных) относятся следующие: иерархическая, сетевая, ре¬ляционная, постреляционная, многомерная и объектно-ориентирован¬ная.
Система управления базами данных (СУБД) — это комплекс языковых и программных средств, предназначенный для создания, ведения и совмест¬ного использования БД многими пользователями. Обычно СУБД различа¬ют по используемой модели данных. Так, СУБД, основанные на использова¬нии реляционной модели данных, называют реляционными СУБД.
Одними из первых СУБД являются следующие системы: IMS (IBM, 1968 г.), IDMS (Cullinet, 1971 г.), ADABAS (Software AG, 1969 г.) и ИНЭС (ВНИИСИ АН СССР, 1976 г.). Количество современных систем управления базами данных исчисляется тысячами.
Приложение представляет собой программу или комплекс программ, обеспечивающих автоматизацию обработки информации для прикладной задачи. Нами рассматриваются приложения, ис-пользующие БД. Прило¬жения могут создаваться в среде или вне среды СУБД — с помощью систе¬мы программирования, исполь-зующей средства доступа к БД, к примеру Delphi или C++ Builder. Приложения, разработанные в среде СУБД, часто называют прило-жениями СУБД, а приложения, разработанные вне СУБД, — внеш-ними приложениями.
Для работы с базой данных зачастую достаточно средств СУБД и не нуж¬но использовать приложения, создание которых требует программирова¬ния. 
Словарь данных (СД) представляет собой подсистему БнД, предназна¬ченную для централизованного хранения информации о структурах дан¬ных, взаимосвязях файлов БД друг с другом, типах данных и форматах их представления, принадлежности данных пользователям, кодах защиты и ограничения доступа и т. п.
Функционально СД присутствует во всех БнД, но не всегда выполняю¬щий эти функции компонент имеет именно такое название. Чаще всего фун¬кции СД выполняются СУБД и вызываются из основного меню системы или реализуются с помощью ее команд.
Администратор базы данных (АБД) - лицо или группа лиц, отве¬чающих за выработку требований к БД, ее проектирование, создание, эффективное использование и сопровождение. В процессе эксплуата¬ции АБД обычно следит за функционированием инфор-мационной сис¬темы, обеспечивает защиту от несанкционированного доступа, контро¬лирует избыточность, непротиворечивость, со-хранность и достоверность хранимой в БД информации. Для одно-пользовательских информацион¬ных систем функции АБД обычно возлагаются на лиц, непосредственно работающих с приложением БД.
В вычислительной сети АБД, как правило, взаимодействует с админист¬ратором сети. В обязанности последнего входят контроль за функцио¬нированием аппаратно-программных средств сети, реконфигурация сети, восстановление программного обеспечения после сбоев и отказов обору¬дования, профилактические мероприятия и обеспечение разграничения доступа.
Вычислительная система (ВС) представляет собой совокуп-ность взаимосвязанных и согласованно действующих ЭВМ или процессоров и других устройств, обеспечивающих автоматизацию процессов приема, обработки и выдачи информации потребителям. Поскольку основными функциями БнД являются хранение и обра-ботка данных, то используе¬мая ВС, наряду с приемлемой мощностью центральных процессоров (ЦП), должна иметь достаточный объем оперативной и внешней памяти прямого доступа.
Эффективность функционирования информационной системы (ИС) во многом зависит от ее архитектуры. В настоящее время перспективной яв¬ляется архитектура клиент-сервер. В достаточно распространенном вари¬анте она предполагает наличие компьютерной сети и распределенной базы данных, включающей корпоративную базу данных (КБД) и персональные базы данных (ПБД). КБД размещается на компьютере-сервере, ПБД разме¬щаются на компью-терах сотрудников подразделений, являющихся клиен¬тами корпора-тивной БД.
Сервером определенного ресурса в компьютерной сети назы-вается компьютер (программа), управляющий этим ресурсом, кли-ентом — компьютер (программа), использующий этот ресурс. В качестве ресур¬са компьютерной сети могут выступать, к примеру, базы данных, фай¬ловые системы, службы печати, почтовые службы. Тип сервера опреде¬ляется видом ресурса, которым он управляет. Например, если управляемым ресурсом является база данных, то соответствующий сер¬вер называется сервером базы данных.
Важнейшим достоинством применения БД в информационных систе¬мах является обеспечение независимости данных от прикладных программ. Это дает возможность пользователям не заниматься проблемами представ¬ления данных на физическом уровне: размещения данных в памяти, мето¬дов доступа к ним и т. д.
Такая независимость достигается поддерживаемым СУБД многоуровневым представлением данных в БД на логическом (пользовательском) и физическом уровнях. Благодаря СУБД и на-личию логического уровня пред¬ставления данных обеспечивается отделение концептуальной (понятийной) модели БД от ее физиче-ского представления в памяти ЭВМ.
1.2. Системы управления базами данных
Эффективность использования разрабатываемой информаци-онной системы во многом зависит от выбора целевой СУБД. Рас-смотрим основные разновидности и функции СУБД.
Классификация СУБД. В общем случае под СУБД можно по-нимать лю¬бой программный продукт, поддерживающий процессы создания, ведения и использования БД. Из имеющихся на рынке программ к СУБД относятся следующие основные виды программ:
•	полнофункциональные СУБД;
•	серверы БД;
•	клиенты БД;
•	средства разработки программ работы с БД.
Полнофункциональные СУБД (ПФСУБД) представляют собой традиционные СУБД, которые сначала появились для больших машин, затем для мини-машин и для ПЭВМ. Из числа всех СУБД современные ПФСУБД являются наиболее многочисленными и мощными по своим возможностям. К ПФСУБД относятся, например, такие пакеты, как Clarion Database Developer, DataBase, Dataplex, dBase IV, Microsoft Access, Microsoft FoxPro и Paradox R:BASE.
Обычно ПФСУБД имеют развитый интерфейс, позволяющий с помо¬щью команд меню выполнять основные действия с БД: созда-вать и моди¬фицировать структуры таблиц, вводить данные, форми-ровать запросы, раз¬рабатывать отчеты, выводить их на печать и т. п. Некоторые системы имеют в качестве вспомогательных и дополни-тель¬ные средства проектирования схем БД или CASE-подсистемы. Для обеспе¬чения доступа к другим БД или к данным SQL-серверов полнофункцио¬нальные СУБД имеют факультативные модули.
Серверы БД предназначены для организации центров обработки данных в сетях ЭВМ. Эта группа БД в настоящее время менее многочисленна, но их количество постепенно растет. Серверы БД реализуют функции управле¬ния базами данных, запрашиваемые другими (клиентскими) программами обычно с помощью операторов SQL.
Примерами серверов БД являются следующие программы: NetWare SQL (Novell), MS SQL Server (Microsoft), InterBase (Borland), SQLBase Server (Gupta), Intelligent Database (Ingress).
В роли клиентских программ для серверов БД в общем случае могут использоваться различные программы: ПФСУБД, электронные таблицы, текстовые процессоры, программы электронной почты и т. д. При этом эле¬менты пары «клиент — сервер» могут принадлежать одному или разным производителям программного обеспечения.
В случае, когда клиентская и серверная части выполнены одной фир¬мой, естественно ожидать, что распределение функций между ними вы¬полнено рационально. В остальных случаях обычно преследуется цель обеспечения доступа к данным «любой ценой». Примером такого со¬единения является случай, когда одна из пол-нофункциональных СУБД играет роль сервера, а вторая СУБД (дру-гого производителя) — роль клиента. Так, для сервера БД SQL Server (Microsoft) в роли клиентских программ могут выступать многие СУБД, такие как dBASE IV, Blyth Software, Paradox, DataBase, Focus, 1-2-3, MDBS III, Revelation и другие.
Средства разработки программ работы с БД могут исполь-зоваться для создания разновидностей следующих программ:
•	клиентских программ;
•	серверов БД и их отдельных компонентов;
•	пользовательских приложений.
Программы первого и второго вида довольно малочисленны, т.к. пред¬назначены, главным образом, для системных программистов. Пакетов тре¬тьего вида гораздо больше, но меньше, чем полнофунк-циональных СУБД.
К средствам разработки пользовательских приложений отно-сятся систе¬мы программирования, например Clipper, разнообразные библиотеки про¬грамм для различных языков программирования, а также пакеты автомати¬зации разработок (в т.ч. систем типа клиент-сервер). В числе наиболее распространенных можно назвать сле-дующие инструментальные системы: Delphi и Power Builder (Bor-land), Visual Basic (Microsoft), SILVERRUN (Computer Advisers Inc.), S-Designor (SDP и Powersoft) и ERwin (LogicWorks).
По характеру использования СУБД делят на персональные и многополь¬зовательские.
Персональные СУБД обычно обеспечивают возможность соз-дания пер¬сональных БД и недорогих приложений, работающих с ними. Персональ¬ные СУБД или разработанные с их помощью при-ложения зачастую могут выступать в роли клиентской части много-пользовательской СУБД. К пер¬сональным СУБД, например, отно-сятся Visual FoxPro, Paradox, Clipper, dBase, Access и др.
Многопользовательские СУБД включают в себя сервер БД и клиент¬скую часть и, как правило, могут работать в неоднородной вычислительной среде (с разными типами ЭВМ и операционными системами). К многополь¬зовательским СУБД относятся, например, СУБД Oracle и Informix.
По используемой модели данных СУБД (как и БД) разделяют на иерархические, сетевые, реляционные, объектно-ориентированные и другие типы. Некоторые СУБД могут одновременно поддерживать не¬сколько моделей данных.
С точки зрения пользователя, СУБД реализует функции хра-нения, из¬менения (пополнения, редактирования и удаления) и обра-ботки информа¬ции, а также разработки и получения различных вы-ходных документов.
Для работы с хранящейся в базе данных информацией СУБД предостав¬ляет программам и пользователям следующие два типа языков:
• язык описания данных — высокоуровневый непроцедурный язык дек¬ларативного типа, предназначенный для описания логиче-ской струк¬туры данных;
• язык манипулирования данными — совокупность конструк-ций,  обеспечивающих выполнение основных операций по работе с данными: ввод, модификацию и выборку данных по запросам.
Названные языки в различных СУБД могут иметь отличия. Наибольшее распространение получили два стандартизованных языка: QBE (Query By Example) — язык запросов по образцу и SQL (Structured Query Language) — структурированный язык запросов. QBE в основном обладает свойства¬ми языка манипулирования дан-ными, SQL сочетает в себе свойства языков обоих типов — описания и манипулирования данными.
Перечисленные выше функции СУБД, в свою очередь, исполь-зуют сле¬дующие основные функции более низкого уровня, которые назовем низко¬уровневыми:
•	управление данными во внешней памяти;
•	управление буферами оперативной памяти;
•	 управление транзакциями;
•	ведение журнала изменений в БД;
•	обеспечение целостности и безопасности БД.
Дадим краткую характеристику необходимости и особенностям реали¬зации перечисленных функций в современных СУБД.
Реализация функции управления данными во внешней памяти в разных системах может различаться и на уровне управления ресур-сами (исполь¬зуя файловые системы ОС или непосредственное управление устройства¬ми ПЭВМ), и по логике самих алгоритмов управления данными. В основ¬ном методы и алгоритмы управления данными являются «внутренним делом» СУБД и прямого отношения к пользователю не имеют. Качество реализации этой функции наиболее сильно влияет на эффективность рабо¬ты специфических ИС, например, с огромными БД, со сложными запроса¬ми, большим объемом обработки данных.
Необходимость буферизации данных и как следствие реализа-ции функ¬ции управления буферами оперативной памяти обусловлено тем, что объем оперативной памяти меньше объема внешней памяти.
Буферы представляют собой области оперативной памяти, предназна¬ченные для ускорения обмена между внешней и опера-тивной памятью. В буферах временно хранятся фрагменты БД, дан-ные из которых предпо¬лагается использовать при обращении к СУБД или планируется записать в базу после обработки.
Механизм транзакций используется в СУБД для поддержания целостно¬сти данных в базе. Транзакцией называется некоторая не-делимая последо¬вательность операций над данными БД, которая от-слеживается СУБД от начала и до завершения. Если по каким-либо причинам (сбои и отказы обо¬рудования, ошибки в программном обеспечении, включая приложение) транзакция остается незавер-шенной, то она отменяется.
Ведение журнала изменений в БД (журнализация изменений) выполняет¬ся СУБД для обеспечения надежности хранения данных в базе при наличии аппаратных сбоев и отказов, а также ошибок в программном обеспечении.
Журнал СУБД — это особая БД или часть основной БД, непо-сред¬ственно недоступная пользователю и используемая для записи инфор¬мации обо всех изменениях базы данных. В различных СУБД в журнал могут заноситься записи, соответствующие изменениям в СУБД на разных уровнях: от минимальной внутренней операции модификации страницы внешней памяти до логической операции модификации БД (например, вставки записи, удаления столбца, из-менения значения в поле) и даже транзакции.
Для эффективной реализации функции ведения журнала изме-нений в БД необходимо обеспечить повышенную надежность хра-нения и поддер¬жания в рабочем состоянии самого журнала. Иногда для этого в системе хранят несколько копий журнала.
Обеспечение целостности БД составляет необходимое условие успеш¬ного функционирования БД, особенно для случая исполь-зования БД в сетях. Целостность БД есть свойство базы данных, означающее, что в ней содержится полная, непротиворечивая и аде-кватно отражающая предметную область информация. Поддержание целостности БД вклю¬чает проверку целостности и ее восстановление в случае обнаружения противоречий в базе данных. Целостное состояние БД описывается с помощью ограничений целостности в виде условий, которым должны удовлетворять хранимые в базе данные. Примером таких условий может служить ограничение диапазонов возможных значений атрибутов объек¬тов, сведения о которых хранятся в БД, или отсутствие повторяющихся записей в таблицах реляционных БД.
1.3. Характеристика современных СУБД
Ниже кратко рассмотрены основные характеристики наиболее популярных реляционных СУБД. 
СУБД  Access 97, Access 2000
Microsoft Access 97 обеспечивает всю мощь и функциональ-ность реляционной базы данных, необходимые для управления лю-быми данными и принятия оптимальных решений. Эта СУБД умеет сводить воедино информацию из самых разных источников (элек-тронные таблицы, другие базы данных) и помогает быстро найти необходимую информацию, донести ее до окружающих с помощью отчетов, графиков или таблиц, а также предлагает весь необходимый инструментарий для построения готового уникального решения для конкретного предприятия или бизнеса.
Преимущества:
•	Простота организации данных 
•	Публикация информации в Internet/Intranet 
•	Построение эффективных решений
         
        Что дает Microsoft Access 97: 
     Простота организации данных: 
•	Специальный мастер Database Wizard позволяет легко создать базу данных даже новичку. 
•	Вместе с Microsoft Access поставляются около 20 наиболее по-пулярных шаблонов для быстрого создания базы данных. 
•	Уже накопленные данные, собранные воедино в одной таблице, можно быстро превратить в оптимизированную реляционную базу данных Microsoft Access, состоящую из нескольких таблиц, используя специальный мастер Table Analyzer Wizard. 
    Публикация информации в Internet/Intranet: 
•	Microsoft Access позволяет легко и быстро распространить не-обходимую информацию через Internet. Вы можете подгото-вить каталог продукции своей фирмы или список предлагаемых услуг и цен на них и опубликовать эту информацию на Вашем Web-сервере. В Microsoft Access есть все необходимые инструменты для оформления информации из базы данных в виде HTML-страницы. 
   Построение эффективных решений: 
•	Создав базу данных, Вы можете проанализировать ее с помо-щью мастера Performance Analyzer Wizard. Он поможет найти способ повысить скорость работы и снизить избыточность базы данных. Performance Analyzer Wizard помогает найти избы-точные связи между таблицами, имеющиеся в базе лишние поля или другие избыточные объекты, которые не требуются для работы базы созданной базы данных или снижают ее эффек-тивность.

Программа Microsoft Access 97 (версия 8) [14] может функ-ционировать под управлением операционных систем Windows 95/98, Windows NT 3.51 и выше. Она является дальнейшим разви¬тием предыдущей версии (версия 7) Microsoft Access for Windows 95 (Access 95). СУБД Access имеет стандартизованный интерфейс приложений Windows. Для работы с базами данных в Access имеется стандартное окно, из кото¬рого можно вызвать любой ее объект просмотра, выполнения, разработки или модификации. Пользователь для работы с базой данных может разработать свой интерфейс, осно-ву которого обычно составляют формы. На формах раз¬мещаются различные элементы, такие как поля таблиц, поля со списком, кноп-ки, раскрывающиеся списки, выключатели, переключатели, флажки, рисун¬ки, подчиненные формы и т. д.
Текущая открытая БД может взаимодействовать с внешними БД, которые используются как источник таблиц при импорте или присоединении, а также как получатель при экспорте данных из те-кущей базы данных. С помощью запросов во внешней БД можно создавать таблицы. В качестве внешней БД может выступать любая база данных, поддерживающая протокол ODBC, на¬пример база данных SQL Server, расположенная на удаленном сервере, или одна из баз данных систем Paradox, dBASE, или Access.
Таблица представляет собой основную единицу хранения дан-ных в базе. Понятие таблицы в Access полностью соответствует аналогичному понятию реляционной модели данных. В произволь-ной базе обычно имеется совокуп¬ность связанных между собой таб-лиц. Между двумя таблицами можно уста¬навливать связи типа 1:1 и 1:М с помощью окна описания схемы данных. Ос¬новными опера-циями над таблицами являются: просмотр и обновление (ввод, мо-дификация и удаление), сортировка, фильтрация и печать.
Форма представляет собой объект базы данных Access, в ко-тором разра¬ботчик размещает элементы управления, принимающие действия пользова¬телей или служащие для ввода, отображения и изменения данных в полях.
Запрос представляет собой формализованное требование на отбор данных из таблиц или на выполнение определенных действий с данными. Запрос позволяет создать набор записей из данных, на-ходящихся в разных таблицах, и использовать его как источник данных для формы или отчета.
Макрос представляет последовательность макрокоманд встро-енного языка Access, задающих автоматическое выполнение неко-торых операций, например: «ОткрытьТаблицу» (OpenTable), «За-крыть» (Close), «НайтиЗапись» (FindRecord) и «Печать» (PrintOut). В последующих версиях системы макросы используются для обес-печения совместимости с предыдущими версиями и ре¬комендуется для процедур автоматизации использовать программный код VBА.
Модуль представляет совокупность описаний, инструкций и процедур на языке VBA, сохраненную под общим именем. В Access используются модули трех типов: формы, отчета и стандартный. Модули форм и отчетов содержат программы, являющиеся локаль-ными для этих объектов. Процедуры из стан¬дартного модуля, если они не описаны явно как локальные для содержащего их модуля, распознаются и могут вызываться процедурами из других моду¬лей в той же базе данных или из адресуемых баз данных.
Access поддерживает традиционные для офисных приложений механиз¬мы связывания и встраивания объектов OLE (Object Linking and Embedding) и динамического обмена данными DDE (Dynamic Data Exchange). При этом по протоколу OLE система Access позво-ляет работать с любыми объектами из библиотеки типов другого приложения, а также предоставляет свои объек¬ты для других при-ложений.
Аналогично системой Access поддерживается протокол дина-мического об¬мена данными в роли приложения, принимающего данные (клиента), и ис¬точника данных (сервера). Например, база данных Access может быть серве¬ром для приложения Microsoft Word, выступающего в роли клиента и принимающего данные по каналу связи.
Для работы программы Microsoft Access 97 достаточно иметь:
• процессор 80486 с тактовой частотой 25 МГц;
• не менее 12 Мбайтов основной памяти (рекомендуется 16 Мбайтов и более);
• не менее 33 Мбайтов на жестком диске при обычной уста-новке.
Для Microsoft Access 97 имеются дополнительные средства разработки, ко¬торые называются Office Developer Edition (ODE). Русская версия этого па¬кета называется «Microsoft Access 97, издание для разработчиков». К Microsoft Access версии 7 прилагался ин-струментарий разработчика - пакет Microsoft Access Developer's Toolkit.
Программа Microsoft Access 2000 (версия 9) [15] продолжает линию Access пре¬дыдущих версий и имеет с ними много сходства. Подавляющее большинство функций, реализованных в Access 97, сохранилось без серьезных изменений, рассмотрим наиболее важные отличия этой СУБД.
Для нормальной работы с MS Access 2000 компьютер должен удовлетво¬рять следующим требованиям:
•	процессор Pentium - с тактовой частотой 75 МГц;
•	16 Мбайтов основной памяти при работе под управлением Windows 95/98 или 32 Мбайта - под управлением Windows NT Workstation;
•	около 90 Мбайтов свободного дискового пространства -  при обычной установке.
В окне БД в Access 2000 появились новые средства просмотра и манипу¬лирования объектами базы данных:
•	 панель инструментов позволяет быстро выполнять команды создания, открытия и управления объектами базы данных;
•	 полоса объектов предназначена для просмотра объектов БД. 
•	 новые ярлыки в окне базы данных;  
•	 настройка способов выбора и открытия объектов в окне         БД;
• выбор объекта путем ввода его имени. 
	   Интерфейс окна БД Microsoft Access 2000 претерпел массу из-менений. Теперь он еще более унифицирован и согласован с ос-тальными приложениями семейства Microsoft Office 2000. В левой части окна базы данных размещена панель, обеспечивающая быстрый доступ к объектам базы данных. На этой панели можно создавать собственные группы элементов, в которые можно помещать ярлыки к объектам базы данных. Это упрощает доступ к различным объектам базы данных. 
	   В окне базы данных появилась новая вкладка для работы со страницами доступа к данным (Data Access Pages). При создании проекта Microsoft Access в окне базы данных отображаются вкладки для таблиц, хранимых процедур и диаграмм базы данных (аналогом последнего объекта является схема базы данных Access). Создавать новые объекты базы данных можно как с помощью панели инстру-ментов окна базы данных, так и с помощью ярлыков, выводящихся в списке объектов.
В режиме таблицы имеется возможность просматривать со-держимое связанных записей в другой таблице. При этом информа-ция отображается в удобной для восприятия иерархической форме. Раскрытие одного уровня иерархии приводит к отображению рядом с записью главной таблицы связанных записей из подчиненной таб-лицы. Для записи подчиненной таблицы также можно отобразить связанные записи и т. д. Раскрывать уровни иерархии можно до тех пор, пока существуют подчиненные таблицы. Иерархически про-смотр данных можно использовать не только для таблиц, но и при просмотре результатов запроса, а также в формах.
Access 2000 автоматически исправляет побочные эффекты, ко-торые возникают при переименовании объектов базы данных (на-пример, таблиц или полей в таблицах). Каждый объект базы данных Access 2000 имеет внутренний уникальный идентификатор, а само имя объекта используется в качестве псевдонима. При переимено-вании объектов заменяется псевдоним объекта, а также изменяются все ссылки на него из других объектов базы данных.
Новая версия Microsoft Access позволяет напрямую (без ис-пользования ядра баз данных Microsoft Jet) подключаться к базам данных SQL Server с помощью технологии OLE DB. Это дает воз-можность повысить скорость работы клиентских приложений и уп-ростить процесс их разработки. Для использования данной возмож-ности создается специальный файл проекта Microsoft Access, в ко-тором будут храниться формы, отчеты, макросы и модули (т. е. все объекты приложения). Все объекты данных (таблицы, запросы, схема данных и хранимые процедуры) хранятся непосредственно на SQL Server. При этом все перечисленные выше объекты доступны через окно проекта базы данных (рис. 20). Такой подход позволяет разработчикам использовать Access 2000 в качестве универсальной основы для построения клиентских приложений, работающих в со-четании с Microsoft SQL Server.
 СУБД Microsoft SQL Server 7.0
Microsoft SQL Server представляет собой СУБД, обеспечи-вающую создание информационных систем с архитектурой «клиент-сервер», в которой он играет роль сервера баз данных [16]. SQL Server удовлетворяет требованиям, предъявляемым к системам рас-пределенной обработки информации. Эта СУБД поддерживает: ти-ражирование данных, параллельную обработку, со¬здание и обра-ботку больших баз данных на недорогих аппаратных платфор¬мах, отличается простотой управления и использования.
В СУБД SQL Server версии 7.0 по  сравнению с другими вер-сиями продукта имеется достаточно большое число нововведений.  SQL Server 7.0 добавляет к сетевым компонентам специальные эле-менты сервиса, такие как OLE DB (Object Linking and Embedding-Database – связывание и  внедрение объектов базы данных) и ODBC (Open Database Connectivity - со¬вместимость открытых баз данных). С их помощью обеспечивается совмес¬тимость различных клиентских приложений при работе с сервером.    Работа SQL Server 7.0 (для варианта, отличного от Desktop, - настольного) ведется под управлением операционной системы Windows NT Server, размещен-ной на компьютере-сервере. Каждый пользователь получает доступ к Windows NT Server с помощью персонального компьютера-клиента. |На компьютере-клиенте устанавливают одну из операционных систем Windows 9x, DOS, OS/2 или Windows NT Workstaion. Эти операционные системы позволяют запускать приложения независимо от компьютера-сервера. Кро¬ме того, каждый пользователь компьютера-клиента с помощью сетевых средств своей операцион-ной системы может устанавливать связь с компьютером-серве¬ром, работающим под управлением Windows NT Server. На компьютерах-клиен¬тах размещаются также локальные базы данных, работа с которыми ведется с помощью персональных СУБД, например Access или Visual FoxPro. С их по¬мощью осуществляется доступ к базам данных, размещенным на сервере. Сеть, работающая под управлением операционной системы Windows NT, строится в виде набора доменов, в каждом из которых может находиться несколько рабочих групп. Домен (domain) представляет собой фрагмент сети Windows NT. Перед добавлением к домену нового компьютера для него со¬здается учетная запись на сервере. Права доступа владельца этого компьюте¬ра в учетной записи устанавливаются администра-тором.
Многие утилиты SQL Server, используемые для управления сервером, подготовки запросов и клиентских приложений, имеются в двух вариантах – в виде серверных и клиентских приложений. Все инструментальные средства SQL Server 7.0 являются 32-разрядными.
СУБД Visual FoxPro 
Visual FoxPro ( версий 5.0, 6.0, 7.0) [2, 6-8] представляет собой СУБД реляционного типа с разви¬тыми средствами создания БД, ор-ганизации запросов к ним, построения при¬ложений с использованием визуального, объектно-ориентированного про¬граммирования. СУБД Visual FoxPro может работать в среде Windows, Windows NT.
В Visual FoxPro реализованы все атрибуты реляционной СУБД. Так, в ней введено понятие базы данных как совокупности связанных таблиц, информа¬ция о которых хранится в словаре данных. В БД определяются условия ее це¬лостности с помощью первичных и внешних ключей таблиц. Все события (изменения), происходящие в БД, могут обнаруживаться и централизованно обрабатываться в связи с появлением в Visual FoxPro таких средств, как триг¬геры и встроенные процедуры.
Используя стандарт ODBC и SQL-запросы для выборки данных, Visual FoxPro позволяет работать с БД СУБД Access, Paradox, dBase и т. д., с серве¬рами БД - Microsoft SQL Server, Oracle и др.
Приложение Visual FoxPro может одновременно работать как с собствен¬ными, так и сетевыми таблицами, расположенными на дру-гих компьютерах локальной сети.
Поддерживаются такие механизмы работы с приложениями Windows, как:
•	 Dynamic Data Exchage (DDE) - динамический обмен данными;
•	Object Linking and Embedding (OLE) - встраивание и связыва-ние  объектов.
С помощью Visual FoxPro можно создавать сетевые приложе-ния, функци¬онирующие в сетях под управлением Microsoft Windows, Windows NT, Microsoft LAN Manager и др.
Visual FoxPro состоит из отдельных компонентов, которые ис-пользуются для хранения и представления информации. Этими компонентами являются таблицы, представления данных, формы, отчеты, запросы, программы и биб¬лиотеки. Для создания форм и отчетов используются конструкторы, поэтому эти компоненты часто называют конструкторскими объектами. Конструк¬торские объекты являются составными объектами, т.е.  состоят из более мелких объектов (таких как поля, кнопки, диаграммы, рамки и т.д.), которые называются объектами интерфейса.
К объектам интерфейса относятся:
•	Текстовые объекты.
•	Прямоугольники и линии.
•	Поля.
•	Кнопки.
•	Графические объекты.
•	OLE-объекты.
•	Страницы документов и т.д.
В Visual FoxPro вся информация содержится в таблицах. Каж-дая таблица имеет уникальное имя и хранится в отдельном файле, наименование которого совпадает с именем таблицы. При задании наименований таблиц действуют те же правила, что и при присвое-нии имен файлов в Windows. Каждый объект хранится в отдельном файле, причем имена файлов, содержащих основные объекты, вы задаете самостоятельно, а наименования файлов, содержащих объ-екты, связанные с таблицей, совпадают с именем таб¬лицы. 
В зависимости от типа содержащегося в нем объекта, Visual FoxPro ав¬томатически присваивает каждому файлу расширение, ко-торое помогает в идентификации объекта. 
Формы используются для ввода и просмотра таблиц в окне формы. Формы позволяют ограничить объем информации, отобра-жаемой на экране, и пред¬ставить ее в более наглядном виде. С по-мощью мастера вы можете создать фор¬му, поместив в нее поля ис-ходной таблицы, расположенные в соответствии с одним из заранее созданных шаблонов. С помощью конструктора форм вы мо¬жете создавать формы любой степени сложности.
Отчеты используются для печати информации, содержащейся в базе дан¬ных. С помощью конструктора отчетов вы можете разра-ботать собственный от¬чет, включающий группировку данных, групповые и вычисляемые поля, и оформить их соответствующим образом.
Запрос является средством для извлечения информации из базы данных, причем данные могут быть распределены среди нескольких таблиц. В Visual FoxPro для формирования запросов используется способ, получивший назва¬ние запроса по образцу. Используя это средство, на основании визуальной ин¬формации вы можете извлечь нужную информацию из одной или нескольких таблиц.
Представления данных предназначены для просмотра выборки, выпол¬ненной на основе запросов, в виде обычных таблиц. Описание представления данных хранится в словаре базы данных. Для просмотра представления дан¬ных не требуется выполнять запрос, а достаточно открыть его в режиме табли¬цы. Представления данных могут использоваться в формах, отчетах, при со¬здании запросов и программ. При разработке приложений на основе реляцион¬ных баз данных таблицы, как правило, используются для хранения нормали-зованной информации. Для просмотра данных, создания форм и от-четов испо¬льзуются многочисленные представления данных.
Программы, написанные на языке Visual FoxPro, предназначены для вы¬полнения различных операций. При использовании объектно-ориентирован¬ного программирования, как правило, программы связаны с объектами, разме¬щаемыми в формах. Однако, программа может выступать и в роли независимо¬го объекта. Такие программы выполняются независимо от наличия форм на эк¬ране.
Библиотеки классов предназначены для хранения классов, соз-данных в Visual FoxPro. Классы могут использоваться при создании форм.
Файл параметров настройки FOXPRO.INI содержит парамет-ры основно¬го окна Visual FoxPro, настройки таблиц, параметры окон диалога и панели инструментов.
Индексы хранят ссылки, предназначенные для упорядочивания данных  и ускорения поиска в таблице. Каждая таблица может иметь несколько индек¬сов.
Memo-поля содержат текстовую информацию, а поля типа General исполь¬зуются при обмене данными с другими приложения-ми, работающими под Windows.
В главном окне Visual FoxPro можно установить отображе¬ние следующих панелей инструментов: Color Palette (цветовая палитра), Database Designer (Конструктор баз данных), Form Controls (элемен-ты управления форм), Form Designer (Конструктор форм), Layout (раз¬мещение элементов управления в отчете или форме), Print Pre-view (предварительный просмотр), Query Designer (Конструктор за-просов), Report Controls (элементы управления отчетов), Report De-signer (Кон¬структор отчетов), View Designer (Конструктор просмот-ров). Измене¬ние состава панелей инструментов выполняется с по-мощью команды View | Toolbars....
При работе с любым элементом проекта (базой данных, табли-цей, запро¬сом и др.) для задания команд удобно пользоваться соот-ветствующим кон¬текстным (всплывающим) меню, вызов которого выполняется щелчком пра¬вой кнопкой мыши.
Окно команд (при условии его отображения в главном окне Visual FoxPro) служит для ввода команд SQL. Кроме того, в случае выполнения каких-либо действий над базой данных в окне команд отображаются соответствующие команды SQL. Для задания ото-бражения окна команд служит команда Window | Command Window (окно | командное окно). Отмену отображе¬ния окна команд можно выполнить щелчком мыши по кнопке в правом верхнем углу окна.
Окно Project Manager (Менеджер проектов) отображается при создании нового или при открытии существующего проекта. Созда-ние базы данных, запросов, отчетов и ряда других элементов может выполняться и без создания проекта. Однако использование проекта создает определенные удобства в работе с различными элементами Visual FoxPro, входящими в состав одногo проекта.
      Visual FoxPro является постоянно развивающейся системой. По сравнению с предыдущими версиями, в Visual FoxPro 7.0 сделан еще один шаг в расширении функциональных возможностей системы, улучшены имеющиеся средства, касающиеся интерфейса среды разработки. 
Visual FoxPro 7.0 поддерживает технологию IntelliSense, об-легчающую создание программного кода. Суть данной технологии состоит в том, что при вводе операторов, свойств и функций FoxPro предлагает на выбор возможные варианты написания. Это уменьшает количество вводимого вручную кода и избавляет разработчика от необходимости лишний раз обращаться к документации. 
Технология IntelliSense Visual FoxPro содержит следующие функции: 
•	показывает список допустимых дочерних объектов (свойств, событий, методов) для указанного объекта. Для СОМ-объектов информация считывается из библиотеки типов; 
•	показывает окно подсказки, содержащее список допусти-мых параметров или аргументов для команд, функций, свойств, методов и событий. 
В редактор Visual FoxPro были добавлены следующие возмож-ности: 
•	использование для выделения текста на выбор пробела или табулятора с настраиваемыми параметрами; 
•	настройка строк комментария; 
•	поддержка в редакторе гиперссылок на Web-страницы или документацию; 
•	поддержка Dirty File Indicator для отображения времени внесения изменений в код; 
•	удобная установка точек прерывания в программном коде; 
•	использование закладок для быстрого возврата на нужный фрагмент кода. 
Для настройки параметров редактора используются новые вкладки Editor  (Редактор) и IDE (Интерактивная среда разработки) диалогового окна Options (Параметры), которое открывается при выполнении команды Options (Параметры) из меню Tools (Сервис). 
Для облегчения работы пользователя с несколькими окнами, такими как Command (Команда), Properties (Свойства) и окном ре-дактора, Visual FoxPro 7.0 позволяет перемещать и закреплять окна, т. е. манипулировать ими по своему усмотрению. 
СОМ-компоненты Visual FoxPro могут использовать свойства, события и методы СОМ-интерфейса, определенного в другом СОМ-компоненте. 
В Visual FoxPro 7.0 появилось средство Task List (Список зада-ний), позволяющее пользователю формировать список задач в про-екте и управлять их выполнением. 
Приложение Object Browser (Браузер объекта), входящее в со-став Visual FoxPro и запускаемое из меню Tools (Сервис), позволяет просматривать свойства, методы и события СОМ-объектов, что очень удобно при работе с объектами, на которые нет документации. 
В Visual FoxPro 7.0 появились новые средства управления XML-файлами:
•	XMLTOCURSOR — преобразовывает XML-текст в курсор или таблицу Visual FoxPro. 
•	CURSORTOXML — преобразовывает курсор Visual Fox-Pro в XML-текст. 
Поддержка Active Accessibility в Visual FoxPro позволяет соз-давать приложения, которые могут использовать люди с проблемами зрения, слуха или моторики. 
В базе данных, созданной в Visual FoxPro 7.0 , вы можете ис-пользовать события, связанные с базой данных, такие как открытие таблицы, добавление или удаление таблицы для проверки прав дос-тупа при открытии таблицы, трассировки выполняемых действий и т. п.
Для автоматизации разработки баз данных и приложений в среде Visual FoxPro имеются средства визуального программирова-ния: Мастеpа (Wizards), Конструкторы (Designers) и Построители (Builders). 
Мастера позволяют сконструировать требуемый объект, на-пример таблицу, просмотр или метку, путем выбора одного из предлагаемых вариантов оформления объекта в ходе пошаговой (с ограниченным числом шагов) про¬цедуры формирования объекта.
Конструкторы предоставляют существенно большие возмож-ности по фор¬мированию облика создаваемого объекта. Естественно, что при этом может потребоваться несколько больше времени.
Построители помогают формировать отдельные элементы управления при создании объекта или комбинировать конструкции при создании выра¬жений. Можно сказать, что Построители являются аналогами Конструкто¬ров, ориентированными на автоматизацию создания составляющих элементов объектов.
 Мастера удобно использовать при необходимости создания в кратчайшие сроки несложных приложений. Если возможностей Мастеров окажется недостаточно, целесообразно прибегнуть к по-мощи Конструкторов и Пост¬роителей.
В последующих главах подробно рассматриваются этапы про-ектирования законченного приложения в среде  Access, ориентиро-ванного на широкое использование средств автоматизированного визуального программирования. 
1.4. Контрольные вопросы
1. Дать определения базы и банка данных.
2. Пояснить функции системы управления базой данных.
3. Каково назначение  приложения, созданного в среде СУБД? 
4. Каковы функции информационных систем?
5. Определить понятия персональных и многопользовательских СУБД.
6.Дать характеристику функциональных возможностей СУБД Access 97, Access 2000. 
7. Какие СУБД пригодны для создания информационных систем с архитектурой "клиент-сервер"?
8. Перечислить конструкторские объекты СУБД Access.
9. Назвать средства визуального программирования СУБД Access.
10. Какие панели инструментов используются в СУБД Access?
